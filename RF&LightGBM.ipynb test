{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ManuelBagasina/DATCapstone/blob/Jhee/RF%26LightGBM.ipynb%20test\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# PreProcessing"
      ],
      "metadata": {
        "id": "n_anRoz5HmFo"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "MoMkqe4pjPeN"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import os\n",
        "import zipfile\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone -b main https://github.com/ManuelBagasina/DATCapstone.git\n",
        "%cd DATCapstone/data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5gZtLPLUq2Iy",
        "outputId": "85f15cb0-8ce4-47b1-b260-a8365f617a0d"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'DATCapstone'...\n",
            "remote: Enumerating objects: 734, done.\u001b[K\n",
            "remote: Counting objects: 100% (85/85), done.\u001b[K\n",
            "remote: Compressing objects: 100% (58/58), done.\u001b[K\n",
            "remote: Total 734 (delta 59), reused 27 (delta 27), pack-reused 649 (from 4)\u001b[K\n",
            "Receiving objects: 100% (734/734), 69.17 MiB | 22.62 MiB/s, done.\n",
            "Resolving deltas: 100% (385/385), done.\n",
            "/content/DATCapstone/data\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from zipfile import ZipFile\n",
        "import pandas as pd\n",
        "\n",
        "# Explicitly extract data.csv from ZIP\n",
        "with ZipFile('_data.csv.zip', 'r') as z:\n",
        "    with z.open('data.csv') as f:  # Ignore macOS metadata files\n",
        "        df = pd.read_csv(f, index_col=0)\n",
        "\n",
        "# Convert date and sort\n",
        "df['Date'] = pd.to_datetime(df['Date'])\n",
        "df = df.sort_values(by=['Ticker', 'Date'])\n"
      ],
      "metadata": {
        "id": "xPTgGyN8q5lV"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "id": "p-hY9x9NjPeQ",
        "outputId": "b5453694-fb8b-41d1-9ba5-85ecef09b414",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 615
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           Date        Open        High         Low       Close    Volume  \\\n",
              "149  2021-09-30  140.983670  141.690258  138.648004  138.863907  89056700   \n",
              "152  2021-10-01  139.256450  140.257452  136.518433  139.992477  94639600   \n",
              "155  2021-10-04  139.119037  139.560665  135.694064  136.547852  98322000   \n",
              "158  2021-10-05  136.891371  139.590139  136.763788  138.481186  80861100   \n",
              "161  2021-10-06  136.871718  139.501783  135.792205  139.354584  83221100   \n",
              "...         ...         ...         ...         ...         ...       ...   \n",
              "8062 2025-01-27  394.799988  406.690002  389.000000  397.149994  58125500   \n",
              "8072 2025-01-28  396.910004  400.589996  386.500000  398.089996  48910700   \n",
              "8082 2025-01-29  395.209991  398.589996  384.480011  389.100006  68033600   \n",
              "8092 2025-01-30  410.779999  412.500000  384.410004  400.279999  98092900   \n",
              "8102 2025-01-31  401.529999  419.989990  401.339996  404.600006  83568200   \n",
              "\n",
              "      Dividends  Stock Splits  GDP (Billions USD)  Unemployment Rate (%)  ...  \\\n",
              "149         0.0           0.0           23921.991                    4.7  ...   \n",
              "152         0.0           0.0           24777.038                    4.5  ...   \n",
              "155         0.0           0.0           24777.038                    4.5  ...   \n",
              "158         0.0           0.0           24777.038                    4.5  ...   \n",
              "161         0.0           0.0           24777.038                    4.5  ...   \n",
              "...         ...           ...                 ...                    ...  ...   \n",
              "8062        0.0           0.0           29723.864                    4.0  ...   \n",
              "8072        0.0           0.0           29723.864                    4.0  ...   \n",
              "8082        0.0           0.0           29723.864                    4.0  ...   \n",
              "8092        0.0           0.0           29723.864                    4.0  ...   \n",
              "8102        0.0           0.0           29723.864                    4.0  ...   \n",
              "\n",
              "       emb_763   emb_764   emb_765   emb_766   emb_767  Target_1day  \\\n",
              "149        NaN       NaN       NaN       NaN       NaN     1.128571   \n",
              "152        NaN       NaN       NaN       NaN       NaN    -3.444626   \n",
              "155        NaN       NaN       NaN       NaN       NaN     1.933334   \n",
              "158        NaN       NaN       NaN       NaN       NaN     0.873398   \n",
              "161        NaN       NaN       NaN       NaN       NaN     1.265976   \n",
              "...        ...       ...       ...       ...       ...          ...   \n",
              "8062  1.174326 -0.262426  0.298183  0.182200  0.388200     0.940002   \n",
              "8072  0.084330 -0.354550 -0.611864 -0.449780  0.584349    -8.989990   \n",
              "8082  0.827862 -0.620100 -0.024186 -0.439615  0.781107    11.179993   \n",
              "8092  1.383147 -0.616897 -0.145329 -0.418483  0.636253     4.320007   \n",
              "8102  0.658588 -0.312093 -0.158066 -0.211410  0.834208          NaN   \n",
              "\n",
              "      Target_1week  Target_1month  Target_1year  Ticker  \n",
              "149       1.756653      10.863785      9.008606    AAPL  \n",
              "152       0.245331       7.016815      0.616699    AAPL  \n",
              "155       3.601639       9.637100     -0.162491    AAPL  \n",
              "158       0.392532       8.744034      2.098389    AAPL  \n",
              "161      -1.069687       9.313263      4.827057    AAPL  \n",
              "...            ...            ...           ...     ...  \n",
              "8062           NaN            NaN           NaN    TSLA  \n",
              "8072           NaN            NaN           NaN    TSLA  \n",
              "8082           NaN            NaN           NaN    TSLA  \n",
              "8092           NaN            NaN           NaN    TSLA  \n",
              "8102           NaN            NaN           NaN    TSLA  \n",
              "\n",
              "[8103 rows x 817 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2dfd0679-4c10-451b-b650-1ad1fa6e81cc\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Close</th>\n",
              "      <th>Volume</th>\n",
              "      <th>Dividends</th>\n",
              "      <th>Stock Splits</th>\n",
              "      <th>GDP (Billions USD)</th>\n",
              "      <th>Unemployment Rate (%)</th>\n",
              "      <th>...</th>\n",
              "      <th>emb_763</th>\n",
              "      <th>emb_764</th>\n",
              "      <th>emb_765</th>\n",
              "      <th>emb_766</th>\n",
              "      <th>emb_767</th>\n",
              "      <th>Target_1day</th>\n",
              "      <th>Target_1week</th>\n",
              "      <th>Target_1month</th>\n",
              "      <th>Target_1year</th>\n",
              "      <th>Ticker</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>149</th>\n",
              "      <td>2021-09-30</td>\n",
              "      <td>140.983670</td>\n",
              "      <td>141.690258</td>\n",
              "      <td>138.648004</td>\n",
              "      <td>138.863907</td>\n",
              "      <td>89056700</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>23921.991</td>\n",
              "      <td>4.7</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.128571</td>\n",
              "      <td>1.756653</td>\n",
              "      <td>10.863785</td>\n",
              "      <td>9.008606</td>\n",
              "      <td>AAPL</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>152</th>\n",
              "      <td>2021-10-01</td>\n",
              "      <td>139.256450</td>\n",
              "      <td>140.257452</td>\n",
              "      <td>136.518433</td>\n",
              "      <td>139.992477</td>\n",
              "      <td>94639600</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>24777.038</td>\n",
              "      <td>4.5</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-3.444626</td>\n",
              "      <td>0.245331</td>\n",
              "      <td>7.016815</td>\n",
              "      <td>0.616699</td>\n",
              "      <td>AAPL</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>155</th>\n",
              "      <td>2021-10-04</td>\n",
              "      <td>139.119037</td>\n",
              "      <td>139.560665</td>\n",
              "      <td>135.694064</td>\n",
              "      <td>136.547852</td>\n",
              "      <td>98322000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>24777.038</td>\n",
              "      <td>4.5</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.933334</td>\n",
              "      <td>3.601639</td>\n",
              "      <td>9.637100</td>\n",
              "      <td>-0.162491</td>\n",
              "      <td>AAPL</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>158</th>\n",
              "      <td>2021-10-05</td>\n",
              "      <td>136.891371</td>\n",
              "      <td>139.590139</td>\n",
              "      <td>136.763788</td>\n",
              "      <td>138.481186</td>\n",
              "      <td>80861100</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>24777.038</td>\n",
              "      <td>4.5</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>0.873398</td>\n",
              "      <td>0.392532</td>\n",
              "      <td>8.744034</td>\n",
              "      <td>2.098389</td>\n",
              "      <td>AAPL</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>161</th>\n",
              "      <td>2021-10-06</td>\n",
              "      <td>136.871718</td>\n",
              "      <td>139.501783</td>\n",
              "      <td>135.792205</td>\n",
              "      <td>139.354584</td>\n",
              "      <td>83221100</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>24777.038</td>\n",
              "      <td>4.5</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1.265976</td>\n",
              "      <td>-1.069687</td>\n",
              "      <td>9.313263</td>\n",
              "      <td>4.827057</td>\n",
              "      <td>AAPL</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8062</th>\n",
              "      <td>2025-01-27</td>\n",
              "      <td>394.799988</td>\n",
              "      <td>406.690002</td>\n",
              "      <td>389.000000</td>\n",
              "      <td>397.149994</td>\n",
              "      <td>58125500</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>29723.864</td>\n",
              "      <td>4.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.174326</td>\n",
              "      <td>-0.262426</td>\n",
              "      <td>0.298183</td>\n",
              "      <td>0.182200</td>\n",
              "      <td>0.388200</td>\n",
              "      <td>0.940002</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>TSLA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8072</th>\n",
              "      <td>2025-01-28</td>\n",
              "      <td>396.910004</td>\n",
              "      <td>400.589996</td>\n",
              "      <td>386.500000</td>\n",
              "      <td>398.089996</td>\n",
              "      <td>48910700</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>29723.864</td>\n",
              "      <td>4.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.084330</td>\n",
              "      <td>-0.354550</td>\n",
              "      <td>-0.611864</td>\n",
              "      <td>-0.449780</td>\n",
              "      <td>0.584349</td>\n",
              "      <td>-8.989990</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>TSLA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8082</th>\n",
              "      <td>2025-01-29</td>\n",
              "      <td>395.209991</td>\n",
              "      <td>398.589996</td>\n",
              "      <td>384.480011</td>\n",
              "      <td>389.100006</td>\n",
              "      <td>68033600</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>29723.864</td>\n",
              "      <td>4.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.827862</td>\n",
              "      <td>-0.620100</td>\n",
              "      <td>-0.024186</td>\n",
              "      <td>-0.439615</td>\n",
              "      <td>0.781107</td>\n",
              "      <td>11.179993</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>TSLA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8092</th>\n",
              "      <td>2025-01-30</td>\n",
              "      <td>410.779999</td>\n",
              "      <td>412.500000</td>\n",
              "      <td>384.410004</td>\n",
              "      <td>400.279999</td>\n",
              "      <td>98092900</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>29723.864</td>\n",
              "      <td>4.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.383147</td>\n",
              "      <td>-0.616897</td>\n",
              "      <td>-0.145329</td>\n",
              "      <td>-0.418483</td>\n",
              "      <td>0.636253</td>\n",
              "      <td>4.320007</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>TSLA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8102</th>\n",
              "      <td>2025-01-31</td>\n",
              "      <td>401.529999</td>\n",
              "      <td>419.989990</td>\n",
              "      <td>401.339996</td>\n",
              "      <td>404.600006</td>\n",
              "      <td>83568200</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>29723.864</td>\n",
              "      <td>4.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.658588</td>\n",
              "      <td>-0.312093</td>\n",
              "      <td>-0.158066</td>\n",
              "      <td>-0.211410</td>\n",
              "      <td>0.834208</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>TSLA</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8103 rows × 817 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2dfd0679-4c10-451b-b650-1ad1fa6e81cc')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2dfd0679-4c10-451b-b650-1ad1fa6e81cc button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2dfd0679-4c10-451b-b650-1ad1fa6e81cc');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d50a5220-3b06-40ee-bdec-be158315f5b3\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d50a5220-3b06-40ee-bdec-be158315f5b3')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d50a5220-3b06-40ee-bdec-be158315f5b3 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_d2d8e88d-6c96-4fe9-b99c-a2b72c52cc32\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_d2d8e88d-6c96-4fe9-b99c-a2b72c52cc32 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 4
        }
      ],
      "source": [
        "\n",
        "\n",
        "df"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "id": "wlMGyliRjPeR"
      },
      "outputs": [],
      "source": [
        "#Read Data\n",
        "# df = pd.read_csv('/Users/wonminkim/Projects/DATCapstone/data2/data.csv', index_col=0)\n",
        "# Correct path for ZIP file\n",
        "zip_path = '/content/DATCapstone/data/_data.csv.zip'\n",
        "\n",
        "# Extract specific file from ZIP\n",
        "with ZipFile(zip_path, 'r') as z:\n",
        "    with z.open('data.csv') as f:  # Explicitly specify the file to extract\n",
        "        df = pd.read_csv(f, index_col=0)\n",
        "\n",
        "\n",
        "df['Date'] = pd.to_datetime(df['Date'])\n",
        "\n",
        "#Forward fill -> micro, macro, stock / fill na -> sentiment\n",
        "df[df.columns[1:40]] = df.groupby('Ticker')[df.columns[1:40]].ffill()\n",
        "df[df.columns[40:-5]] = df[df.columns[40:-5]].fillna(0)\n",
        "\n",
        "df = df.dropna(subset=df.columns[0:-5])\n",
        "\n",
        "# Sorting\n",
        "df = df.sort_values(by=['Ticker', 'Date']).reset_index(drop=True)\n",
        "\n",
        "# Lag feature (Exclude embedding columns)\n",
        "lag_cols = df.columns[1:44]\n",
        "lags = [1, 3, 5, 7, 14, 30]\n",
        "lag_features = []\n",
        "\n",
        "for col in lag_cols:\n",
        "    for lag in lags:\n",
        "        lagged = df.groupby('Ticker')[col].shift(lag)\n",
        "        lag_features.append(lagged.rename(f'{col}_lag{lag}'))\n",
        "\n",
        "lag_df = pd.concat(lag_features, axis=1)\n",
        "\n",
        "df = pd.concat([df.reset_index(drop=True), lag_df.reset_index(drop=True)], axis=1)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import glob\n",
        "import os\n",
        "\n",
        "# Read articles df\n",
        "csv_files = glob.glob(os.path.join(os.getcwd(), \"*articles*.csv\"))\n",
        "\n",
        "df_articles_list = []\n",
        "\n",
        "for file in csv_files:\n",
        "    # get ticker from filename\n",
        "    ticker = os.path.basename(file).split('_')[0]\n",
        "    df_articles = pd.read_csv(file)\n",
        "    df_articles['Ticker'] = ticker\n",
        "    df_articles_list.append(df_articles)\n",
        "\n",
        "# concat articles dataframe\n",
        "df_articles = pd.concat(df_articles_list, ignore_index=True)\n",
        "\n",
        "# Articles dataframe preprocessing\n",
        "df_articles[\"Date\"] = pd.to_datetime(df_articles[\"time\"], errors='coerce', utc=True).dt.tz_convert(None).dt.date\n",
        "df_articles = df_articles[['Date', 'Ticker', 'sentiment']]\n",
        "sentiment_dummies = pd.get_dummies(df_articles['sentiment'])\n",
        "df_encoded = pd.concat([df_articles[['Date', 'Ticker']], sentiment_dummies], axis=1)\n",
        "df_articles = df_encoded.groupby(['Date', 'Ticker']).sum().reset_index()\n",
        "df_articles['Date'] = pd.to_datetime(df_articles['Date'])\n",
        "\n",
        "df_articles['articles_avg_sentiment'] = (df_articles['Negative'] * -1 + df_articles['Neutral'] * 0 + df_articles['Positive']) / (df_articles['Negative'] + df_articles['Neutral'] + df_articles['Positive'])\n",
        "df_articles.columns = ['Date', 'Ticker', 'Articles_Negative', 'Articles_Neutral', 'Articles_positive', 'Articles_avg_sentiment']\n",
        "df_articles\n",
        "\n",
        "df = pd.merge(df, df_articles, on=['Date', 'Ticker'], how = 'left')\n",
        "\n",
        "# Fill 0 except the target columns\n",
        "df[[col for col in df.columns if 'Target' not in col]] = df[[col for col in df.columns if 'Target' not in col]].fillna(0)"
      ],
      "metadata": {
        "id": "aLm2BNBPrrzC"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.decomposition import PCA\n",
        "\n",
        "# PCA\n",
        "pca = PCA(n_components=0.95, random_state=42)\n",
        "emb_cols = [col for col in df.columns if col.startswith(\"emb_\")]\n",
        "X_emb = df[emb_cols]\n",
        "X_emb_pca = pca.fit_transform(X_emb)\n",
        "\n",
        "# PCA columns\n",
        "pca_columns = [f\"emb_pca_{i}\" for i in range(X_emb_pca.shape[1])]\n",
        "df_pca_part = pd.DataFrame(X_emb_pca, columns=pca_columns, index=df.index)\n",
        "df_non_pca = df.drop(columns=emb_cols)\n",
        "\n",
        "df_pca = pd.concat([df_non_pca.reset_index(drop=True), df_pca_part.reset_index(drop=True)], axis=1)\n",
        "\n",
        "# 결과 확인\n",
        "df_pca.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 340
        },
        "id": "Snh0zr9_ruQE",
        "outputId": "d519acc7-8398-45c2-8215-4a823d621575"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        Date        Open        High         Low       Close    Volume  \\\n",
              "0 2021-09-30  140.983670  141.690258  138.648004  138.863907  89056700   \n",
              "1 2021-10-01  139.256450  140.257452  136.518433  139.992477  94639600   \n",
              "2 2021-10-04  139.119037  139.560665  135.694064  136.547852  98322000   \n",
              "3 2021-10-05  136.891371  139.590139  136.763788  138.481186  80861100   \n",
              "4 2021-10-06  136.871718  139.501783  135.792205  139.354584  83221100   \n",
              "\n",
              "   Dividends  Stock Splits  GDP (Billions USD)  Unemployment Rate (%)  ...  \\\n",
              "0        0.0           0.0           23921.991                    4.7  ...   \n",
              "1        0.0           0.0           24777.038                    4.5  ...   \n",
              "2        0.0           0.0           24777.038                    4.5  ...   \n",
              "3        0.0           0.0           24777.038                    4.5  ...   \n",
              "4        0.0           0.0           24777.038                    4.5  ...   \n",
              "\n",
              "   emb_pca_74  emb_pca_75  emb_pca_76  emb_pca_77  emb_pca_78  emb_pca_79  \\\n",
              "0   -0.000573   -0.000315   -0.000716   -0.000052    0.000158    0.000176   \n",
              "1   -0.000573   -0.000315   -0.000716   -0.000052    0.000158    0.000176   \n",
              "2   -0.000573   -0.000315   -0.000716   -0.000052    0.000158    0.000176   \n",
              "3   -0.000573   -0.000315   -0.000716   -0.000052    0.000158    0.000176   \n",
              "4   -0.000573   -0.000315   -0.000716   -0.000052    0.000158    0.000176   \n",
              "\n",
              "   emb_pca_80  emb_pca_81  emb_pca_82  emb_pca_83  \n",
              "0    0.000412   -0.000354   -0.000744    0.000022  \n",
              "1    0.000412   -0.000354   -0.000744    0.000022  \n",
              "2    0.000412   -0.000354   -0.000744    0.000022  \n",
              "3    0.000412   -0.000354   -0.000744    0.000022  \n",
              "4    0.000412   -0.000354   -0.000744    0.000022  \n",
              "\n",
              "[5 rows x 395 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-19e5059f-d971-4f6d-9eeb-c8db126d7ac5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Close</th>\n",
              "      <th>Volume</th>\n",
              "      <th>Dividends</th>\n",
              "      <th>Stock Splits</th>\n",
              "      <th>GDP (Billions USD)</th>\n",
              "      <th>Unemployment Rate (%)</th>\n",
              "      <th>...</th>\n",
              "      <th>emb_pca_74</th>\n",
              "      <th>emb_pca_75</th>\n",
              "      <th>emb_pca_76</th>\n",
              "      <th>emb_pca_77</th>\n",
              "      <th>emb_pca_78</th>\n",
              "      <th>emb_pca_79</th>\n",
              "      <th>emb_pca_80</th>\n",
              "      <th>emb_pca_81</th>\n",
              "      <th>emb_pca_82</th>\n",
              "      <th>emb_pca_83</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2021-09-30</td>\n",
              "      <td>140.983670</td>\n",
              "      <td>141.690258</td>\n",
              "      <td>138.648004</td>\n",
              "      <td>138.863907</td>\n",
              "      <td>89056700</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>23921.991</td>\n",
              "      <td>4.7</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.000573</td>\n",
              "      <td>-0.000315</td>\n",
              "      <td>-0.000716</td>\n",
              "      <td>-0.000052</td>\n",
              "      <td>0.000158</td>\n",
              "      <td>0.000176</td>\n",
              "      <td>0.000412</td>\n",
              "      <td>-0.000354</td>\n",
              "      <td>-0.000744</td>\n",
              "      <td>0.000022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2021-10-01</td>\n",
              "      <td>139.256450</td>\n",
              "      <td>140.257452</td>\n",
              "      <td>136.518433</td>\n",
              "      <td>139.992477</td>\n",
              "      <td>94639600</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>24777.038</td>\n",
              "      <td>4.5</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.000573</td>\n",
              "      <td>-0.000315</td>\n",
              "      <td>-0.000716</td>\n",
              "      <td>-0.000052</td>\n",
              "      <td>0.000158</td>\n",
              "      <td>0.000176</td>\n",
              "      <td>0.000412</td>\n",
              "      <td>-0.000354</td>\n",
              "      <td>-0.000744</td>\n",
              "      <td>0.000022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2021-10-04</td>\n",
              "      <td>139.119037</td>\n",
              "      <td>139.560665</td>\n",
              "      <td>135.694064</td>\n",
              "      <td>136.547852</td>\n",
              "      <td>98322000</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>24777.038</td>\n",
              "      <td>4.5</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.000573</td>\n",
              "      <td>-0.000315</td>\n",
              "      <td>-0.000716</td>\n",
              "      <td>-0.000052</td>\n",
              "      <td>0.000158</td>\n",
              "      <td>0.000176</td>\n",
              "      <td>0.000412</td>\n",
              "      <td>-0.000354</td>\n",
              "      <td>-0.000744</td>\n",
              "      <td>0.000022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2021-10-05</td>\n",
              "      <td>136.891371</td>\n",
              "      <td>139.590139</td>\n",
              "      <td>136.763788</td>\n",
              "      <td>138.481186</td>\n",
              "      <td>80861100</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>24777.038</td>\n",
              "      <td>4.5</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.000573</td>\n",
              "      <td>-0.000315</td>\n",
              "      <td>-0.000716</td>\n",
              "      <td>-0.000052</td>\n",
              "      <td>0.000158</td>\n",
              "      <td>0.000176</td>\n",
              "      <td>0.000412</td>\n",
              "      <td>-0.000354</td>\n",
              "      <td>-0.000744</td>\n",
              "      <td>0.000022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2021-10-06</td>\n",
              "      <td>136.871718</td>\n",
              "      <td>139.501783</td>\n",
              "      <td>135.792205</td>\n",
              "      <td>139.354584</td>\n",
              "      <td>83221100</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>24777.038</td>\n",
              "      <td>4.5</td>\n",
              "      <td>...</td>\n",
              "      <td>-0.000573</td>\n",
              "      <td>-0.000315</td>\n",
              "      <td>-0.000716</td>\n",
              "      <td>-0.000052</td>\n",
              "      <td>0.000158</td>\n",
              "      <td>0.000176</td>\n",
              "      <td>0.000412</td>\n",
              "      <td>-0.000354</td>\n",
              "      <td>-0.000744</td>\n",
              "      <td>0.000022</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 395 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19e5059f-d971-4f6d-9eeb-c8db126d7ac5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-19e5059f-d971-4f6d-9eeb-c8db126d7ac5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-19e5059f-d971-4f6d-9eeb-c8db126d7ac5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-95173d77-bf6e-47d7-891e-6669cc2b02bf\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-95173d77-bf6e-47d7-891e-6669cc2b02bf')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-95173d77-bf6e-47d7-891e-6669cc2b02bf button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_pca"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.ensemble import RandomForestRegressor\n",
        "from sklearn.model_selection import train_test_split, GridSearchCV\n",
        "from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.decomposition import PCA\n",
        "\n",
        "def random_forest(data, target):\n",
        "    df = data.copy()\n",
        "    remove_target_col = [col for col in df.columns if 'Target' in col]\n",
        "    remove_target_col.remove(target)\n",
        "\n",
        "    # Drop other Targets and NaNs\n",
        "    df = df.drop(columns=remove_target_col)\n",
        "    df = df.dropna(subset=[target])\n",
        "\n",
        "    # Date processing\n",
        "    df['Date'] = pd.to_datetime(df['Date'])\n",
        "\n",
        "    # One-hot encode Ticker\n",
        "    df = pd.get_dummies(df, columns=['Ticker'], drop_first=True)\n",
        "\n",
        "    # X, y\n",
        "    y = df[target]\n",
        "    X = df.drop(columns=['Date', target])\n",
        "\n",
        "    # Standardization\n",
        "    scaler = StandardScaler()\n",
        "    X_scaled = scaler.fit_transform(X)\n",
        "\n",
        "    # Train/Test Split\n",
        "    X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, shuffle=False)\n",
        "\n",
        "    # Hyperparameter tuning\n",
        "    param_grid = {\n",
        "        'n_estimators': [100, 200],\n",
        "        'max_depth': [None, 10, 20]\n",
        "    }\n",
        "\n",
        "    # GridSearchCV\n",
        "    grid_search = GridSearchCV(RandomForestRegressor(random_state=42),\n",
        "                               param_grid,\n",
        "                               cv=3,\n",
        "                               scoring='neg_mean_squared_error',\n",
        "                               n_jobs=-1,\n",
        "                               verbose=1)\n",
        "\n",
        "    grid_search.fit(X_train, y_train)\n",
        "    best_model = grid_search.best_estimator_\n",
        "\n",
        "    print(\"Best Parameters:\")\n",
        "    print(grid_search.best_params_)\n",
        "\n",
        "    # Prediction\n",
        "    y_pred = best_model.predict(X_test)\n",
        "\n",
        "    # Evaluation\n",
        "    mse = mean_squared_error(y_test, y_pred)\n",
        "    mae = mean_absolute_error(y_test, y_pred)\n",
        "    r2 = r2_score(y_test, y_pred)\n",
        "\n",
        "    print(f\"\\n Evaluation:\")\n",
        "    print(f\"Mean Squared Error (MSE): {mse:.4f}\")\n",
        "    print(f\"Mean Absolute Error (MAE): {mae:.4f}\")\n",
        "    print(f\"R² Score: {r2:.4f}\")\n",
        "\n",
        "    # Visualization\n",
        "    test_index = np.arange(len(y_test))\n",
        "    plt.figure(figsize=(14, 6))\n",
        "    plt.plot(test_index, y_test.values, label='Actual', linewidth=2)\n",
        "    plt.plot(test_index, y_pred, label='Predicted', linewidth=2)\n",
        "    plt.title(f'{target}: Actual vs Predicted')\n",
        "    plt.xlabel('Test Sample Index')\n",
        "    plt.ylabel(target)\n",
        "    plt.legend()\n",
        "    plt.grid(True)\n",
        "    plt.tight_layout()\n",
        "    plt.show()"
      ],
      "metadata": {
        "id": "aA7mmyvQrxxN"
      },
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Sj5krYQfjPeS",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 365
        },
        "outputId": "c98cd4e8-c6e7-4062-9746-edee33551469"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Fitting 3 folds for each of 6 candidates, totalling 18 fits\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-32-923ac070161d>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mrandom_forest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Target_1day'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mrandom_forest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Target_1week'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mrandom_forest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Target_1month'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mrandom_forest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Target_1year'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-31-371d369f5bfb>\u001b[0m in \u001b[0;36mrandom_forest\u001b[0;34m(data, target)\u001b[0m\n\u001b[1;32m     45\u001b[0m                                verbose=1)\n\u001b[1;32m     46\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 47\u001b[0;31m     \u001b[0mgrid_search\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     48\u001b[0m     \u001b[0mbest_model\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgrid_search\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbest_estimator_\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     49\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/base.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(estimator, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1387\u001b[0m                 )\n\u001b[1;32m   1388\u001b[0m             ):\n\u001b[0;32m-> 1389\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mfit_method\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mestimator\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1390\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1391\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_search.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, **params)\u001b[0m\n\u001b[1;32m   1022\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mresults\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1023\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1024\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_run_search\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mevaluate_candidates\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1025\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1026\u001b[0m             \u001b[0;31m# multimetric is determined here because in the case of a callable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_search.py\u001b[0m in \u001b[0;36m_run_search\u001b[0;34m(self, evaluate_candidates)\u001b[0m\n\u001b[1;32m   1569\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_run_search\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mevaluate_candidates\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1570\u001b[0m         \u001b[0;34m\"\"\"Search all candidates in param_grid\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1571\u001b[0;31m         \u001b[0mevaluate_candidates\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mParameterGrid\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mparam_grid\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1572\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1573\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_search.py\u001b[0m in \u001b[0;36mevaluate_candidates\u001b[0;34m(candidate_params, cv, more_results)\u001b[0m\n\u001b[1;32m    968\u001b[0m                     )\n\u001b[1;32m    969\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 970\u001b[0;31m                 out = parallel(\n\u001b[0m\u001b[1;32m    971\u001b[0m                     delayed(_fit_and_score)(\n\u001b[1;32m    972\u001b[0m                         \u001b[0mclone\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbase_estimator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/sklearn/utils/parallel.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m     75\u001b[0m             \u001b[0;32mfor\u001b[0m \u001b[0mdelayed_func\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwargs\u001b[0m \u001b[0;32min\u001b[0m \u001b[0miterable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     76\u001b[0m         )\n\u001b[0;32m---> 77\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__call__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterable_with_config\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     78\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     79\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, iterable)\u001b[0m\n\u001b[1;32m   2005\u001b[0m         \u001b[0mnext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2006\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2007\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0moutput\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreturn_generator\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moutput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2008\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2009\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__repr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m_get_outputs\u001b[0;34m(self, iterator, pre_dispatch)\u001b[0m\n\u001b[1;32m   1648\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1649\u001b[0m             \u001b[0;32mwith\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_backend\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mretrieval_context\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1650\u001b[0;31m                 \u001b[0;32myield\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_retrieve\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1651\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1652\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mGeneratorExit\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/joblib/parallel.py\u001b[0m in \u001b[0;36m_retrieve\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1760\u001b[0m                 (self._jobs[0].get_status(\n\u001b[1;32m   1761\u001b[0m                     timeout=self.timeout) == TASK_PENDING)):\n\u001b[0;32m-> 1762\u001b[0;31m                 \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msleep\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0.01\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1763\u001b[0m                 \u001b[0;32mcontinue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1764\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ],
      "source": [
        "random_forest(df, 'Target_1day')\n",
        "random_forest(df, 'Target_1week')\n",
        "random_forest(df, 'Target_1month')\n",
        "random_forest(df, 'Target_1year')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "random_forest(df_pca, 'Target_1day')\n",
        "random_forest(df_pca, 'Target_1week')\n",
        "random_forest(df_pca, 'Target_1month')\n",
        "random_forest(df_pca, 'Target_1year')"
      ],
      "metadata": {
        "id": "qX16nfyKQFxP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split, GridSearchCV\n",
        "from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "import lightgbm as lgb\n",
        "\n",
        "def lightgbm_model(data, target):\n",
        "    df = data.copy()\n",
        "\n",
        "    # Target setting\n",
        "    remove_target_col = [col for col in df.columns if 'Target' in col]\n",
        "    remove_target_col.remove(target)\n",
        "    df = df.drop(columns=remove_target_col)\n",
        "    df = df.dropna(subset=[target])\n",
        "\n",
        "    df['Date'] = pd.to_datetime(df['Date'])\n",
        "\n",
        "    # Ticker encoding\n",
        "    df = pd.get_dummies(df, columns=['Ticker'], drop_first=True)\n",
        "\n",
        "    # X, y\n",
        "    y = df[target]\n",
        "    X = df.drop(columns=['Date', target])\n",
        "\n",
        "    # Standardization\n",
        "    scaler = StandardScaler()\n",
        "    X_scaled = scaler.fit_transform(X)\n",
        "\n",
        "    # Split\n",
        "    X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, shuffle=False)\n",
        "\n",
        "    # Hyperparameter\n",
        "    param_grid = {\n",
        "        'num_leaves': [31, 63],\n",
        "        'max_depth': [-1, 10, 20],\n",
        "        'learning_rate': [0.1, 0.01],\n",
        "        'n_estimators': [100, 200]\n",
        "    }\n",
        "\n",
        "    # GridSearchCV\n",
        "    model = lgb.LGBMRegressor(random_state=42, n_jobs=-1, verbosity=-1)\n",
        "    grid_search = GridSearchCV(estimator=model,\n",
        "                               param_grid=param_grid,\n",
        "                               cv=3,\n",
        "                               scoring='neg_mean_squared_error',\n",
        "                               verbose=0,\n",
        "                               n_jobs=-1)\n",
        "\n",
        "    grid_search.fit(X_train, y_train)\n",
        "    best_model = grid_search.best_estimator_\n",
        "\n",
        "    print(\"Best Parameters:\")\n",
        "    print(grid_search.best_params_)\n",
        "\n",
        "    # Prediction\n",
        "    y_pred = best_model.predict(X_test)\n",
        "\n",
        "    # Evaluation\n",
        "    mse = mean_squared_error(y_test, y_pred)\n",
        "    mae = mean_absolute_error(y_test, y_pred)\n",
        "    r2 = r2_score(y_test, y_pred)\n",
        "\n",
        "    print(f\"\\n Evaluation:\")\n",
        "    print(f\"Mean Squared Error (MSE): {mse:.4f}\")\n",
        "    print(f\"Mean Absolute Error (MAE): {mae:.4f}\")\n",
        "    print(f\"R² Score: {r2:.4f}\")\n",
        "\n",
        "    # Visualization\n",
        "    test_index = np.arange(len(y_test))\n",
        "    plt.figure(figsize=(14, 6))\n",
        "    plt.plot(test_index, y_test.values, label='Actual', linewidth=2)\n",
        "    plt.plot(test_index, y_pred, label='Predicted', linewidth=2)\n",
        "    plt.title(f'{target}: Actual vs Predicted (LightGBM)')\n",
        "    plt.xlabel('Test Sample Index')\n",
        "    plt.ylabel(target)\n",
        "    plt.legend()\n",
        "    plt.grid(True)\n",
        "    plt.tight_layout()\n",
        "    plt.show()"
      ],
      "metadata": {
        "id": "hps7SYTCLSPl"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "lightgbm_model(df, 'Target_1day')\n",
        "lightgbm_model(df, 'Target_1week')\n",
        "lightgbm_model(df, 'Target_1month')\n",
        "lightgbm_model(df, 'Target_1year')"
      ],
      "metadata": {
        "id": "IfTgNIJJUOIQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "lightgbm_model(df_pca, 'Target_1day')\n",
        "lightgbm_model(df_pca, 'Target_1week')\n",
        "lightgbm_model(df_pca, 'Target_1month')\n",
        "lightgbm_model(df_pca, 'Target_1year')"
      ],
      "metadata": {
        "id": "NaWVtsuTUPOB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(df.columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rkMFgMLBajiT",
        "outputId": "fd1ceb74-389a-4595-d354-0412a2fcd448"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Index(['Date', 'Open', 'High', 'Low', 'Close', 'Volume', 'Dividends',\n",
            "       'Stock Splits', 'GDP (Billions USD)', 'Unemployment Rate (%)',\n",
            "       ...\n",
            "       'positive_lag1', 'positive_lag3', 'positive_lag5', 'positive_lag7',\n",
            "       'positive_lag14', 'positive_lag30', 'Articles_Negative',\n",
            "       'Articles_Neutral', 'Articles_positive', 'Articles_avg_sentiment'],\n",
            "      dtype='object', length=1079)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "LSTM"
      ],
      "metadata": {
        "id": "CZLpAa9RjcGR"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n",
        "from tensorflow.keras.models import Sequential\n",
        "from tensorflow.keras.layers import LSTM, Dense\n"
      ],
      "metadata": {
        "id": "WUBM3zOr4L-0"
      },
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "df = df.sort_values(by=[\"Ticker\", \"Date\"]).reset_index(drop=True)\n",
        "df[\"time_idx\"] = df.groupby(\"Ticker\").cumcount()\n",
        "\n",
        "\n",
        "feature_cols = [col for col in df.columns if 'Target' not in col and col not in ['Date', 'Ticker', 'time_idx']]\n",
        "\n",
        "target_col = \"Target_1day\"\n"
      ],
      "metadata": {
        "id": "_n85gSC5K-N_"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(\n",
        "    X, y, test_size=0.2, shuffle=False\n",
        ")\n",
        "\n",
        "scaler = StandardScaler()\n",
        "X_train_scaled = scaler.fit_transform(X_train)\n",
        "X_test_scaled = scaler.transform(X_test)"
      ],
      "metadata": {
        "id": "hw91BA27K_xy"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def create_sequences(X, y, look_back=30):\n",
        "    Xs, ys = [], []\n",
        "    for i in range(look_back, len(X)):\n",
        "        Xs.append(X[i-look_back:i])\n",
        "        ys.append(y[i])\n",
        "    return np.array(Xs), np.array(ys)\n",
        "\n",
        "X_train_seq, y_train_seq = create_sequences(X_train_scaled, y_train)\n",
        "X_test_seq, y_test_seq = create_sequences(X_test_scaled, y_test)"
      ],
      "metadata": {
        "id": "MPs7y2dULHBB"
      },
      "execution_count": 16,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model = Sequential([\n",
        "    LSTM(64, activation='relu', input_shape=(X_train_seq.shape[1], X_train_seq.shape[2])),\n",
        "    Dense(1)\n",
        "])\n",
        "model.compile(optimizer='adam', loss='mse')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QYXjn-3ObV_O",
        "outputId": "e04ac55a-ac13-4d6b-879d-631eef63b53d"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/keras/src/layers/rnn/rnn.py:200: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n",
            "  super().__init__(**kwargs)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "history = model.fit(\n",
        "    X_train_seq, y_train_seq,\n",
        "    epochs=20,\n",
        "    batch_size=16,\n",
        "    validation_data=(X_test_seq, y_test_seq),\n",
        "    verbose=1\n",
        ")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5QiV_90JTbRJ",
        "outputId": "e78745ff-902a-43d4-e6f3-0f739201cdec"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m17s\u001b[0m 50ms/step - loss: 103.3078 - val_loss: 46.7315\n",
            "Epoch 2/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 55ms/step - loss: 57.8073 - val_loss: 217.0938\n",
            "Epoch 3/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m17s\u001b[0m 61ms/step - loss: 55.6002 - val_loss: 33.8217\n",
            "Epoch 4/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m15s\u001b[0m 42ms/step - loss: 25.5041 - val_loss: 29.4563\n",
            "Epoch 5/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 46ms/step - loss: 27.6942 - val_loss: 58.5801\n",
            "Epoch 6/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 41ms/step - loss: 23.5310 - val_loss: 23.4129\n",
            "Epoch 7/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 40ms/step - loss: 18.7729 - val_loss: 18.0736\n",
            "Epoch 8/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 42ms/step - loss: 32.0731 - val_loss: 23.4202\n",
            "Epoch 9/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 42ms/step - loss: 15.7844 - val_loss: 14.9752\n",
            "Epoch 10/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 39ms/step - loss: 14.8927 - val_loss: 23.6258\n",
            "Epoch 11/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 39ms/step - loss: 22.7221 - val_loss: 17.2449\n",
            "Epoch 12/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 39ms/step - loss: 21.3551 - val_loss: 19.6111\n",
            "Epoch 13/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 40ms/step - loss: 13.8172 - val_loss: 14.6204\n",
            "Epoch 14/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 46ms/step - loss: 13.7151 - val_loss: 15.4456\n",
            "Epoch 15/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 47ms/step - loss: 19.8335 - val_loss: 17.3218\n",
            "Epoch 16/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 46ms/step - loss: 16.0880 - val_loss: 18.4017\n",
            "Epoch 17/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 45ms/step - loss: 19.7001 - val_loss: 14.5596\n",
            "Epoch 18/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 47ms/step - loss: 1381.3843 - val_loss: 63.2836\n",
            "Epoch 19/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 46ms/step - loss: 33.0436 - val_loss: 48.1787\n",
            "Epoch 20/20\n",
            "\u001b[1m280/280\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m20s\u001b[0m 45ms/step - loss: 1052.9957 - val_loss: 2141.3347\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred = model.predict(X_test_seq).flatten()"
      ],
      "metadata": {
        "id": "z9S2GibTLKu0",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "cd1b65b0-89ca-42e6-cba8-b40f363620a8"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1m35/35\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 26ms/step\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred = model.predict(X_test_seq).flatten()\n",
        "\n",
        "mae = mean_absolute_error(y_test_seq, y_pred)\n",
        "rmse = np.sqrt(mean_squared_error(y_test_seq, y_pred))\n",
        "r2 = r2_score(y_test_seq, y_pred)\n",
        "\n",
        "print(f\"LSTM Results for - Target_1day\")\n",
        "print(f\"MAE: {mae:.2f}\")\n",
        "print(f\"RMSE: {rmse:.2f}\")\n",
        "print(f\"R²  : {r2:.4f}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jaTnIL2BToUA",
        "outputId": "78a545a6-298e-4b1b-e955-0de3386b8dc1"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1m35/35\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 35ms/step\n",
            "LSTM Results for - Target_1day\n",
            "MAE: 33.70\n",
            "RMSE: 46.26\n",
            "R²  : -161.6233\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(12, 6))\n",
        "plt.plot(y_test_seq, label='Actual', linewidth=2)\n",
        "plt.plot(y_pred, label='Predicted', linewidth=2)\n",
        "plt.title(f'LSTM: Actual vs Predicted')\n",
        "plt.xlabel('Sample Index')\n",
        "plt.ylabel('Target Value')\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 607
        },
        "id": "HSqQ_pGVby7U",
        "outputId": "45341e39-ee0a-4755-d972-f417e71aeb05"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "errors = y_test_seq - y_pred\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.hist(errors, bins=20, color='green', alpha=0.7)\n",
        "plt.title(\"LSTM: Error Distribution\")\n",
        "plt.xlabel(\"Prediction Error\")\n",
        "plt.ylabel(\"Frequency\")\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 607
        },
        "id": "lArjYFefI3M3",
        "outputId": "24369323-0038-42c7-e799-ae67ddd2c7b8"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(12, 6))\n",
        "plt.plot(errors, color='red')\n",
        "plt.axhline(0, color='black', linestyle='--')\n",
        "plt.title('LSTM Residuals (Actual - Predicted)')\n",
        "plt.xlabel('Sample Index')\n",
        "plt.ylabel('Residual')\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "66pBbZfYQNpz",
        "outputId": "d69bf50c-8c2b-4944-f469-7e80d1f7eb01",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 607
        }
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "look_back = 30\n",
        "\n",
        "for target_col in ['Target_1day', 'Target_1week', 'Target_1month', 'Target_1year']:\n",
        "    print(f\"\\nTraining LSTM for {target_col}...\\n\")\n",
        "\n",
        "    df_single = df[df['Ticker'] == selected_ticker].copy()\n",
        "    df_single = df_single.dropna(subset=[target_col])\n",
        "\n",
        "    # Feature scaling\n",
        "    X = df_single[feature_cols].values\n",
        "    y = df_single[target_col].values\n",
        "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle=False)\n",
        "\n",
        "    scaler = StandardScaler()\n",
        "    X_train_scaled = scaler.fit_transform(X_train)\n",
        "    X_test_scaled = scaler.transform(X_test)\n",
        "\n",
        "    X_seq_train, y_seq_train = create_sequences(X_train_scaled, y_train, look_back)\n",
        "    X_seq_test, y_seq_test = create_sequences(X_test_scaled, y_test, look_back)\n",
        "\n",
        "    model = Sequential([\n",
        "        LSTM(64, activation='relu', input_shape=(X_seq_train.shape[1], X_seq_train.shape[2])),\n",
        "        Dense(1)\n",
        "    ])\n",
        "    model.compile(optimizer='adam', loss='mse')\n",
        "    history = model.fit(\n",
        "        X_seq_train, y_seq_train,\n",
        "        epochs=20,\n",
        "        batch_size=16,\n",
        "        validation_data=(X_seq_test, y_seq_test),\n",
        "        verbose=0\n",
        "    )\n",
        "\n",
        "    y_pred = model.predict(X_seq_test).flatten()\n",
        "\n",
        "    # Visualization\n",
        "    plt.figure(figsize=(12, 6))\n",
        "    plt.plot(y_seq_test, label='Actual', color='blue', linewidth=2)\n",
        "    plt.plot(y_pred, label='Predicted', color='orange', linestyle='--', linewidth=2)\n",
        "    plt.title(f\"LSTM: Actual vs Predicted – {target_col}\")\n",
        "    plt.xlabel(\"Sample Index\")\n",
        "    plt.ylabel(\"Value\")\n",
        "    plt.legend()\n",
        "    plt.grid(True)\n",
        "    plt.tight_layout()\n",
        "    plt.show()\n",
        "\n",
        "    mae = mean_absolute_error(y_seq_test, y_pred)\n",
        "    rmse = np.sqrt(mean_squared_error(y_seq_test, y_pred))\n",
        "\n",
        "    print(f\"{target_col} – MAE: {mae:.2f}, RMSE: {rmse:.2f}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 276
        },
        "id": "ETRLT8-vl0vR",
        "outputId": "ba91e19d-52f6-448f-a709-a509373fd53d"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Training LSTM for Target_1day...\n",
            "\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "name 'selected_ticker' is not defined",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-40-2e2762e79375>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"\\nTraining LSTM for {target_col}...\\n\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m     \u001b[0mdf_single\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Ticker'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mselected_ticker\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m     \u001b[0mdf_single\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf_single\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdropna\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msubset\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtarget_col\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'selected_ticker' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "    # Visualization: Actual vs Predicted\n",
        "    plt.figure(figsize=(12, 6))\n",
        "    plt.plot(y_seq_test, label='Actual', color='blue', linewidth=2)\n",
        "    plt.plot(y_pred, label='Predicted', color='orange', linestyle='--', linewidth=2)\n",
        "    plt.title(f\"LSTM: Actual vs Predicted – {target_col}\")\n",
        "    plt.xlabel(\"Sample Index\")\n",
        "    plt.ylabel(\"Value\")\n",
        "    plt.legend()\n",
        "    plt.grid(True)\n",
        "    plt.tight_layout()\n",
        "    plt.show()\n",
        "\n",
        "    # Error Distribution\n",
        "    errors = y_seq_test - y_pred\n",
        "    plt.figure(figsize=(10, 6))\n",
        "    plt.hist(errors, bins=20, color=\"green\", alpha=0.7)\n",
        "    plt.xlabel(\"Prediction Error\")\n",
        "    plt.ylabel(\"Frequency\")\n",
        "    plt.title(f\"LSTM Error Distribution – {target_col}\")\n",
        "    plt.grid(True)\n",
        "    plt.tight_layout()\n",
        "    plt.show()\n",
        "\n",
        "    # Metrics Bar Chart\n",
        "    metrics = {\"MAE\": mae, \"RMSE\": rmse}\n",
        "    plt.figure(figsize=(8, 6))\n",
        "    plt.bar(metrics.keys(), metrics.values(), color=[\"purple\", \"orange\"])\n",
        "    plt.ylabel(\"Metric Value\")\n",
        "    plt.title(f\"LSTM Model Performance – {target_col}\")\n",
        "    plt.grid(alpha=0.3)\n",
        "    plt.tight_layout()\n",
        "    plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "ilf9Qzb4m72Q",
        "outputId": "a84d76ab-2182-4a2d-e54c-129d904e636d"
      },
      "execution_count": 116,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "dat490",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.21"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}